services:
  init-backend-volumes:
    image: 'debian:12.8-slim'
    profiles: [ backend, all ]
    user: '0:0' 
    # No network is needed to initialize named volumes
    network_mode: none
    volumes:
      - local-1:/var/.local-1
      - local-2:/var/.local-2
    entrypoint: 'bash'
    command: [ '-c', 'chmod a+rwx /var/.local-1 /var/.local-2' ]
    restart: 'no'

  fastapi-dev-server:
    image: 'localdomain-backend:python-3.12-cuda12'
    profiles: [ backend, all ]
    environment:
      # Only environment variables that are important to a Docker environment
      # will be configured here. The reason is that changes to environment variables
      # configured here do require a restart before they take effect:
      # application-centric ones should be designed to avoiid a Docker container restart.
      #
      # The `uv` cache should be moved away from the bind-mount because there is no
      # need for it to be shared with the host.
      - UV_CACHE_DIR=/app/.local/uv_cache
      # The `uv` default venv should also be moved away from the bind-mount because there is no
      # need for it to be shared with the host.
      - UV_PROJECT_ENVIRONMENT=/app/.local/venv
      # The Python bytecode cache should be moved away from the bind-mount because
      # there is no need for it shared with the host.
      - PYTHONPYCACHEPREFIX=/app/.local/pycache
    volumes:
      # Mount the project directory to /app in the container
      - .:/app
      # Mounting a local area to use container-installed dependencies
      - local-1:/app/.local
      - ./docker/custom-docker-entrypoint.sh:/custom-docker-entrypoint.sh
    ports: # use if it is necessary to expose the container to the host machine
      - '8100:8100'
    user: '1000:1000'
    networks:
      - agent-poc
    entrypoint: [ 'bash', '/custom-docker-entrypoint.sh' ]
    command: [ '/run_fastapi_dev_server.sh' ]
    depends_on:
      - init-backend-volumes
    deploy:
      resources:
        limits:
          memory: 4G # Give enough to run local model
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  celery-worker:
    image: 'localdomain-backend:python-3.12-cuda12'
    profiles: [ backend, all ]
    environment:
      # Only environment variables that are important to a Docker environment
      # will be configured here. The reason is that changes to environment variables
      # configured here do require a restart before they take effect:
      # application-centric ones should be designed to avoiid a Docker container restart.
      #
      # The `uv` cache should be moved away from the bind-mount because there is no
      # need for it to be shared with the host.
      - UV_CACHE_DIR=/app/.local/uv_cache
      # The Python bytecode cache should be moved away from the bind-mount because
      # there is no need for it shared with the host.
      - PYTHONPYCACHEPREFIX=/app/.local/pycache
    volumes:
      # Mount the project directory to /app in the container
      - .:/app
      # Mounting a local area to use container-installed dependencies
      - local-2:/app/.local
      ## - ./docker/custom-docker-entrypoint.sh:/custom-docker-entrypoint.sh
      - ./run_celery_worker.sh:/run_celery_worker.sh
    ports: # use if it is necessary to expose the container to the host machine
      - '8101:8101'
    networks:
      - agent-poc
    user: '1000:1000'
    entrypoint: [ 'bash', '/custom-docker-entrypoint.sh' ]
    command: [ '/run_celery_worker.sh' ]
    depends_on:
      - init-backend-volumes
    deploy:
      resources:
        limits:
          memory: 8G # Give enough to run Tesseract and local model
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

volumes:
  local-1:
    driver: local
  local-2:
    driver: local
